#kafka
kafka.userTopic=user
kafka.bootstrapAddress =kafka:9093
kafka.connection.timeout=5000

#server
server.port=8083
common.basePath=/api

#cors
cors.url=http://161.35.52.95:3000
cors.enabled =true


#database
spring.jpa.show-sql=true


#postgre sql database
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.platform=postgres

#earse warning in JPA
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

#postgre connection, if failing will be defaulted to the tiny heroku postgre free dev database with only 20 connections, 20mb and 10k rows limits, really don't care the heroku test database security
spring.datasource.url=${DB_URL:jdbc:postgresql://ec2-52-44-166-58.compute-1.amazonaws.com:5432/d4l7ltpjnbt6gq}
spring.datasource.username=${DB_USER:qsjhtolwovsbjr}
spring.datasource.password=${DB_PASS:60c86bdf20ede5ca65c64aea5fcfd6dea23ee1f7503edd221710231d4598ab8c}



#liquibase:
spring.jpa.hibernate.ddl-auto=none
spring.liquibase.enabled=true


# secure id and secret as secret variable resolved at deployment time, to do list
#auth
security.oauth2.client.client_id=clientapp
security.oauth2.client.client-secret=zmhshopping
security.oauth2.resource.token-info-uri=http://161.35.52.95:8081/oauth/check_token
